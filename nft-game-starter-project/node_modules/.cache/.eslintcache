[{"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/index.js":"1","/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/App.js":"2","/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js":"3","/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/constants.js":"4","/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js":"5"},{"size":219,"mtime":1670321320681,"results":"6","hashOfConfig":"7"},{"size":4369,"mtime":1670755862246,"results":"8","hashOfConfig":"7"},{"size":3489,"mtime":1670671857455,"results":"9","hashOfConfig":"7"},{"size":400,"mtime":1670482835660,"results":"10","hashOfConfig":"7"},{"size":2273,"mtime":1670850079991,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mcjb02",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/index.js",[],["24","25"],"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/App.js",[],"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js",["26"],"import React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\n\nconst SelectCharacter = ({ setCharacterNFT }) => {\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n\n  const mintCharacterNFTAction = (characterId) => async () => {\n    try {\n      if (gameContract) {\n        console.log(\"Minting character in progress...\");\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn:\", mintTxn);\n      }\n    } catch (error) {\n      console.warn(\"MintCharacterAction Error:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log(\"Getting contract characters to mint\");\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n\n        console.log(\"charactersTxn:\", charactersTxn);\n\n        const characters = charactersTxn.map((characterData) => transformCharacterData(characterData));\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error(\"Something went wrong fetching characters:\", error);\n      }\n    };\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n      }\n\n      alert(\n        `NFT キャラクターが Mint されました -- リンクはこちらです: https://testnets.opensea.io/assets/${\n          gameContract.address\n        }/${tokenId.toNumber()}`\n      );\n    };\n\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n\n  const renderCharacters = () => \n    characters.map((character, index) => (\n      <div className=\"character-item\" key={character.name}>\n        <div className=\"name-container\">\n          <p>{character.name}</p>\n        </div>\n        <img src={character.imageURI} alt={character.name} />\n        <button\n          type=\"button\"\n          className=\"character-mint-button\"\n          onClick={mintCharacterNFTAction(index)}\n        >{`Mint ${character.name}`}</button>\n      </div>\n    ));\n\n  return (\n    <div className=\"select-character-container\">\n      <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\n      {characters.length >0 && (\n        <div className=\"character-grid\">{renderCharacters()} </div> // 配列を埋め込み展開できる\n      )}\n    </div>\n  );\n};\nexport default SelectCharacter;","/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/constants.js",[],"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":83,"column":6,"nodeType":"33","endLine":83,"endColumn":20,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCharacterNFT'. Either include it or remove the dependency array. If 'setCharacterNFT' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [gameContract, setCharacterNFT]",{"range":"40","text":"41"},[2608,2622],"[gameContract, setCharacterNFT]"]