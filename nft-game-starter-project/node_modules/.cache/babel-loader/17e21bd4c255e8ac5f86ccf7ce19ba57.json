{"ast":null,"code":"var _jsxFileName = \"/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCharacter = _ref => {\n  _s();\n  let {\n    setCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  const [mintingCharacter, setMintingCharacter] = useState(false);\n  const mintCharacterNFTAction = characterId => async () => {\n    try {\n      if (gameContract) {\n        setMintingCharacter(true);\n        console.log(\"Minting character in progress...\");\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn:\", mintTxn);\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.warn(\"MintCharacterAction Error:\", error);\n      setMintingCharacter(false);\n    }\n  };\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log(\"Getting contract characters to mint\");\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn:\", charactersTxn);\n        const characters = charactersTxn.map(characterData => transformCharacterData(characterData));\n        setCharacters(characters);\n      } catch (error) {\n        console.error(\"Something went wrong fetching characters:\", error);\n      }\n    };\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n      }\n      alert(`NFT キャラクターが Mint されました -- リンクはこちらです: https://testnets.opensea.io/assets/${gameContract.address}/${tokenId.toNumber()}`);\n    };\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n  const renderCharacters = () => characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character.imageURI,\n      alt: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"character-mint-button\",\n      onClick: mintCharacterNFTAction(index),\n      children: `Mint ${character.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, character.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-grid\",\n      children: [renderCharacters(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) // 配列を埋め込み展開できる\n    , mintingCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Minting In Progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectCharacter, \"YAIluGJumFDmJAPdOeDT94pTudM=\");\n_c = SelectCharacter;\nexport default SelectCharacter;\nvar _c;\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","characterId","console","log","mintTxn","mintCharacterNFT","wait","error","warn","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","map","characterData","onCharacterMint","sender","tokenId","characterIndex","toNumber","characterNFT","checkIfUserHasNFT","alert","address","on","off","renderCharacters","character","index","name","imageURI","length"],"sources":["/Users/takeuchishuto/Documents/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\nconst SelectCharacter = ({ setCharacterNFT }) => {\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  const [mintingCharacter, setMintingCharacter] = useState(false);\n\n  const mintCharacterNFTAction = (characterId) => async () => {\n    try {\n      if (gameContract) {\n        setMintingCharacter(true);\n        console.log(\"Minting character in progress...\");\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn:\", mintTxn);\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.warn(\"MintCharacterAction Error:\", error);\n      setMintingCharacter(false);\n    }\n  };\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log(\"Getting contract characters to mint\");\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n\n        console.log(\"charactersTxn:\", charactersTxn);\n\n        const characters = charactersTxn.map((characterData) => transformCharacterData(characterData));\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error(\"Something went wrong fetching characters:\", error);\n      }\n    };\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n      }\n\n      alert(\n        `NFT キャラクターが Mint されました -- リンクはこちらです: https://testnets.opensea.io/assets/${\n          gameContract.address\n        }/${tokenId.toNumber()}`\n      );\n    };\n\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n\n  const renderCharacters = () => \n    characters.map((character, index) => (\n      <div className=\"character-item\" key={character.name}>\n        <div className=\"name-container\">\n          <p>{character.name}</p>\n        </div>\n        <img src={character.imageURI} alt={character.name} />\n        <button\n          type=\"button\"\n          className=\"character-mint-button\"\n          onClick={mintCharacterNFTAction(index)}\n        >{`Mint ${character.name}`}</button>\n      </div>\n    ));\n\n  return (\n    <div className=\"select-character-container\">\n      <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\n      {characters.length >0 && (\n        <div className=\"character-grid\">{renderCharacters()} </div> // 配列を埋め込み展開できる\n      )}\n      {mintingCharacter && (\n        <div className=\"loading\">\n          <div className=\"indicator\">\n            <LoadingIndicator />\n            <p>Minting In Progress...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default SelectCharacter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}